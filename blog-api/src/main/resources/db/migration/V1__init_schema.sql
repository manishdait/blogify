CREATE SEQUENCE IF NOT EXISTS user_sequence
START WITH 101
MINVALUE 101
MAXVALUE 100000
INCREMENT BY 1
NO CYCLE;

CREATE TABLE IF NOT EXISTS app_user (
  id INTEGER PRIMARY KEY NOT NULL DEFAULT NEXTVAL('user_sequence'),
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  verified BOOLEAN NOT NULL DEFAULT false,
  profile VARCHAR(255),
  created_at TIMESTAMP,
  edited_at TIMESTAMP
);

CREATE SEQUENCE IF NOT EXISTS token_sequence
START WITH 101
MINVALUE 101
MAXVALUE 1000000
INCREMENT BY 1
NO CYCLE;

CREATE TABLE IF NOT EXISTS token (
  id INTEGER PRIMARY KEY NOT NULL DEFAULT NEXTVAL('token_sequence'),
  token VARCHAR(255) NOT NULL UNIQUE,
  expiration TIMESTAMP NOT NULL,
  type VARCHAR(255) NOT NULL,
  used BOOLEAN NOT NULL DEFAULT false,
  user_id INTEGER REFERENCES app_user(id) NOT NULL,
  created_at TIMESTAMP,
  edited_at TIMESTAMP
);

ALTER TABLE token ADD CONSTRAINT ck_token_type
CHECK(type = 'EMAIL_VERIFICATION' OR type = 'RESET_PASSWORD');

CREATE SEQUENCE IF NOT EXISTS blog_sequence
START WITH 101
MINVALUE 101
MAXVALUE 1000000
INCREMENT BY 1
NO CYCLE;

CREATE TABLE IF NOT EXISTS blog (
  id INTEGER PRIMARY KEY NOT NULL DEFAULT NEXTVAL('blog_sequence'),
  title VARCHAR(255) NOT NULL,
  content TEXT,
  author_id INTEGER REFERENCES app_user(id) NOT NULL,
  created_at TIMESTAMP,
  edited_at TIMESTAMP
);

CREATE SEQUENCE IF NOT EXISTS comment_sequence
START WITH 101
MINVALUE 101
MAXVALUE 1000000
INCREMENT BY 1
NO CYCLE;

CREATE TABLE IF NOT EXISTS comment (
  id INTEGER PRIMARY KEY NOT NULL DEFAULT NEXTVAL('comment_sequence'),
  message VARCHAR(255) NOT NULL,
  author_id INTEGER REFERENCES app_user(id) NOT NULL,
  blog_id INTEGER REFERENCES blog(id) NOT NULL,
  created_at TIMESTAMP,
  edited_at TIMESTAMP
);